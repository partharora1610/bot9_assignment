// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:mysecretpassword@localhost:5432/dukaan"
}

model User { 
  id       String   @id @default(cuid())
  email    String   @unique
  name     String
  sub      String   @unique
  
  bot      Bot?     @relation(fields: [botId], references: [id])
  botId    String?  @unique
}

model Bot {
  id          String   @id @default(cuid())
  name        String
  website     String
  companyName String


  coversation Converstaion[]
  tools       Tools[]
  user        User[]
  design      BotDesign[]
  trainingData TrainingData[]
  createdAt   DateTime @default(now())
}

model Tools {
  id       String   @id @default(cuid())
  name     String
  bot      Bot      @relation(fields: [botId], references: [id])
  botId    String
  description String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TrainingData {
  id       String   @id @default(cuid())
  
  bot      Bot      @relation(fields: [botId], references: [id])
  botId    String

  url      String
  key      String
  uploadStatus UPLOAD_STATUS @default(PENDING)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BotDesign {
  id       String   @id @default(cuid())
  bot      Bot      @relation(fields: [botId], references: [id])
  botId    String
  design   Json
}


model Converstaion {
  id       String   @id @default(cuid())
  email    String?

  bot      Bot      @relation(fields: [botId], references: [id])
  botId    String
  messages Message[]  
}


model Message {
  id       String   @id @default(cuid())
  text     String
  role     MESSAGE_ROLE 
  conversation Converstaion @relation(fields: [conversationId], references: [id])
  conversationId String
}

enum MESSAGE_ROLE{
  USER
  BOT
}

enum UPLOAD_STATUS {
  PENDING
  PROCESSING
  DONE
  FAILED
}
